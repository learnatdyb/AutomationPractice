<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-01T11:41:36 IST" name="Default suite" finished-at="2020-11-01T11:42:20 IST" duration-ms="44511">
    <groups>
    </groups>
    <test started-at="2020-11-01T11:41:36 IST" name="Default test" finished-at="2020-11-01T11:42:20 IST" duration-ms="44511">
      <class name="TestRunner.RunTest">
        <test-method is-config="true" signature="setExtentReport()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:36 IST" name="setExtentReport" finished-at="2020-11-01T11:41:36 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method is-config="true" signature="lunchbrowser()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:36 IST" name="lunchbrowser" finished-at="2020-11-01T11:41:40 IST" duration-ms="4239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchbrowser -->
        <test-method signature="three()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:40 IST" name="three" finished-at="2020-11-01T11:41:40 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- three -->
        <test-method is-config="true" signature="tear(org.testng.ITestResult)[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:40 IST" name="tear" finished-at="2020-11-01T11:41:41 IST" duration-ms="602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=three status=SUCCESS method=RunTest.three()[pri:0, instance:TestRunner.RunTest@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method is-config="true" signature="lunchbrowser()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:41 IST" name="lunchbrowser" finished-at="2020-11-01T11:41:44 IST" duration-ms="3148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchbrowser -->
        <test-method signature="launchwebsite()[pri:1, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:44 IST" name="launchwebsite" finished-at="2020-11-01T11:41:57 IST" duration-ms="13436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchwebsite -->
        <test-method is-config="true" signature="tear(org.testng.ITestResult)[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:57 IST" name="tear" finished-at="2020-11-01T11:41:58 IST" duration-ms="917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=launchwebsite status=SUCCESS method=RunTest.launchwebsite()[pri:1, instance:TestRunner.RunTest@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method is-config="true" signature="lunchbrowser()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:41:58 IST" name="lunchbrowser" finished-at="2020-11-01T11:42:02 IST" duration-ms="3290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchbrowser -->
        <test-method signature="verify_tabs_text()[pri:2, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:42:02 IST" name="verify_tabs_text" finished-at="2020-11-01T11:42:15 IST" duration-ms="13096" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [WOMENx] but found [WOMEN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [WOMENx] but found [WOMEN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at TestRunner.RunTest.verify_tabs_text(RunTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_tabs_text -->
        <test-method is-config="true" signature="tear(org.testng.ITestResult)[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:42:15 IST" name="tear" finished-at="2020-11-01T11:42:20 IST" duration-ms="5227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_tabs_text status=FAILURE method=RunTest.verify_tabs_text()[pri:2, instance:TestRunner.RunTest@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestRunner.RunTest@2f54a33d]" started-at="2020-11-01T11:42:20 IST" name="endTest" finished-at="2020-11-01T11:42:20 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- TestRunner.RunTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
